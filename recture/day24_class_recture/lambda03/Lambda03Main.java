package com.lec.java.lambda03;

/*
	 세가지 방법으로 자유자재로 구현할수 있어야 합니다.
	 방법 1) 클래스 implements 인터페이스 + 오버라이딩.
	 방법 2) 익명클래스
	 방법 3) 람다 표현식 lambda expression
*/
public class Lambda03Main {

	public static void main(String[] args) {
		System.out.println("익명 클래스, 람다 표현식 연습");
		
		// TODO
		
		System.out.println("\n프로그램 종료");
	} // end main()
	
} // end class


// cpu 중앙처리장치 : 단 한 시점에는 단 하나의 일을 하고 있다.(즉, 한순간에 프로세스를 하나만 작동시키는 프로세서가 cpu다)
// 근데 어떻게 여러게를 동시에 처리하는가?
// 한프로그램당 시간을 부여해서 일정시간동안 프로그램을 진행시킨다. 이후 다른 프로그램들도 같은 방식으로 진행시킨다.(이걸 반복)
// 다만 존나빠르게 진행해서 동시에 같이 하는 것 처럼 보이는 것 뿐이다. 그래서 코어 하나당 1개의 프로세스를 담당하니까 쿼드코어는 4가지를 한번에 처리가능
// 근데 하나의 프로세스 안에서 여러개로 일을 쪼개야 할 경우에 사용하는게 쓰레드라고 부른다. 즉, 쪼개진 조각 1개당 1개의 스레드가 생기는거다.
// (근데 cpu가 동시에 하는게 하니고 시분할은 계속하는거야 cpu입장에서보면 일만 늘어난거지)

// 다운로드하면서 다른 동작하는것, 배경음악 나오면서 게임하는 것, 등등 동시에 하는 것들을 스레드로 각각 쪼개줘야 하는것이다.
// 스레드로 만들어주지 않으면 쓰레기 같은 것들이 많이 나온다.
