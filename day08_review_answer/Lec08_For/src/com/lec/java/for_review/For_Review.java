package com.lec.java.for_review;

public class For_Review {
	public static void main(String[] args) {
		System.out.println("11월 21일 Java class 중  For에 applicable되는 Review를 Start합니다.");
		
		// 번외 문제 
//		1) 한줄 주석의 단축키는? 행 선택 + ctrl + /
//		2) 구간 주석의 단축키는? 구간 드래그 + ctrl + shift + /
		
		
		/* 문제 1. 순환문의 종류에 대해 나열하라
		1)for
		2)while
		3)do while?
		*/
		
		// 문제 2. for순환문 구문에 대해 작동 순서를 작성하라.
		/*
		 * for + (최초식(;) + 조건식(;) + 증감식) 형태로 구성되며 수행식 구동순서는 처음 최초식에서 조건식으로 이동하고 조건식의 값이
		 * 트루이면 수행식으로 수행식에서 다시 증감식으로 증감식에서 변형된 변수값이 다시 조건식으로 들어가서 다시 참일경우 수행식 > 증감식 >
		 * 조건식 구조를 반복해서 돌게 된다.
		 */
		
		

		/* 문제 3. "hello java" + 1~5 를 출력해주는 순환문을 만들어라.   
		 * >>> ex) hello java 1, 다음은  자바 2 다음은 자바3 이런식으로 쭉
		 * 3-1. 총 몇번 순환하는 가? 5회
		 * 3-2. 순환중에 사용된 인덱스값의 시작값과 끝값은? 시작 1, 끝 5
		 * 3-3. 순환문이 끝난뒤 인덱스값은? 6
		*/
		int i;
		for (i = 1 ; i <=5 ; i++) {
			System.out.println("hello java" + i);
		}
		//////////////??????????? 질문사항 혹시 for구문에서 break 가능? /////////////?????????????????????????
		
		
		
		
		// 문제 4. 10~1순서로 출력되는 순환문을 각각 만들어라
		
		// 아까 i를 int로 선언해놨으니까 그냥 쓰면
		for (i = 10 ; i >= 1 ; i--) {
			System.out.println(i);
		}
		
		
		// 문제 5. 순환이 끝난 변수를 그냥 따로 출력해보아라. > for의 어떤 특성이 반영된 수가 나오는가? (힌트는 for의 작동순서)
		System.out.println();
		
		System.out.println(i);
//		0값이 나오는데 이렇게 되는건 for의 증감연산자가 마지막 false가 나오기 전에 한 번 작동을 하기때문이다.
		
		
		// 문제 6. 순환문을 디버깅하면 for에서 스텝오버시 어떤 현상을 볼 수 있는가?
//		for에서 브레이크포인트를 잡고 디버그를 하면 step over를 눌렀을 때 for과 print문을 왔다 갔다하면서 우측상단에 변수값만 변하는 모습을 볼 수 있다.
		
		
		
///////////////////////////////////////////// 여기까지 01입니다. //////////////////////////////////////////////

		
		
		
		
///////////////////////////////////////////// 여기부터 02입니다. //////////////////////////////////////////////
		
		
		// 문제 7. 구구단 2단을 출력하는 for구문을 만들어라.
		int j;
		for (j = 1 ; j <= 9 ; j++) {
			System.out.println("2 x " + j);
		}
		
		
		
		// 문제 8. for안에서 선언한 변수들을 밖에서 출력하면 어떻게 되는가?
//		for안에만 존재하는 것들이라 인식을 못한다. 블럭의 개념이 이래서 중요
		
		
		// 문제9. 2x2, 3x3, 4x4, 5x5, 6x6, 7x7 ... 9x9까지 출력되는 for구문을 만들어라.

		for (j = 1 ; j <= 9 ; j++) {
			System.out.println(j + " x " + j);
		}
		
		
		
///////////////////////////////////////////// 여기까지 02입니다. //////////////////////////////////////////////
		
		

///////////////////////////////////////////// 여기부터 03입니다. //////////////////////////////////////////////
		
		
		// 문제 10. 1~10 중에서 짝수만 출력하는 for구문을 만들어라. (2가지 방식)
		int k;
		for (k = 1 ; k <= 10 ; k++) {
			if (k % 2 == 0) {
			System.out.println("짝수 값 = " + k);
			}
		} 
		
		for(k = 2; k <= 10 ; k += 2) {
			System.out.println("짝수 = " + k);
		}
		
		
		
///////////////////////////////////////////// 여기까지가 03입니다. //////////////////////////////////////////////		
		
		
///////////////////////////////////////////// 여기부터 04입니다. //////////////////////////////////////////////		
		
		
		// 문제 11. 1~100 수 중에서 2와 7의 공배수만 출력하는 for구문을 만들어라.
		
		for (k = 1 ; k <= 100 ; k++) {
			if ((k % 2 == 0) && (k % 7 ==0)) {
				System.out.println("2와 7의 공배수 = " + k);
			}
		}
		
		
		
///////////////////////////////////////////// 여기까지 04입니다. //////////////////////////////////////////////		
		
		
		System.out.println("Review를 END합니다.");
		
		
	} // end main
} // end class	