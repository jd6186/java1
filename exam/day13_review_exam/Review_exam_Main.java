package com.lec.java.review_exam;

import java.util.Scanner;

public class Review_exam_Main {
	public static void main(String[] args) {
//		문제 1. 메소드 기능은 파이썬에서 어떤 기능과 흡사한가?

//		TODO
		
		
		
		
		
//		문제 1. 메소드란 무엇인가? 구성이 어떻게 되며 사용 방법은 무엇인가? 그리고 각 구성은 어떤 기능을 담당하는가?

//		TODO
		
		
		
		
		
//		문제 1. 메소드의 배치 위치는 어디인가?

//		TODO
		
		
		
		
		
		
		
//		문제 1. 메소드 signature란 무엇을 의미하는가?

//		TODO
		
		
		
		
		
		
		
//		문제 1. 해당 메소드를 만들고 출력하라 (있어야 하는 위치에 작업함)
		
		// 메소드 이름 : sayHello
		// 매개변수 : name ()

//		TODO
		
		
		
		
		
		
		
		
		
//		문제 1. 해당 메소드를 만들고 출력하라
		
		// 메소드 이름 : sayAge
		// 매개변수 : int age
		// 리턴타입 : void (리턴값 없다.)

//		TODO
		
		
		
		
		
		
		
		
		
//		문제 1. 해당 메소드를 만들고 출력하라
		
		// 메소드 이름 : sayHello2 
		// 매개변수 : String name 이름
		//	        int age 나이
		// 리턴타입 : void (리턴값 없다.)

//		TODO
		
		
		
		
		
		
		
		
		
//		문제 1. 해당 메소드를 만들고 출력하라
		
		// 여러 메소드를 합치기
		// 위에서 만든 sayHello와 sayAge를 합쳐라

//		TODO
		
		
		
		
		
		
		
//		문제 1. 메소드에 주석을 넣어라

//		TODO
		
		
		
		
		
		
//		문제 1. 단축키 
//		1) 메인 안에 출력하고 있는 메소드를 원본 위치를 한번에 가는 단축키(2가지 방식) :
//
//		TODO
		
		
		
		
		
		
//		2) 원본 메소드가 어디서 호출되는지 원본에서 보는 단축키 :

//		TODO
		
		
		
		
		
		
		
//		문제 1. 디버깅시 출력되고 있는 메소드 내부를 확인하고 싶을 때 누르는 것과 나올 때 누르는 것은?

//		TODO
		
		
		
		
		
		
		
//		문제 1. 4칙연산 각각 메소드를 만들어서 출력해라.

//		TODO
		
		
		
		
		
		
		
		
//////////////////////////////////////////여기까지가 method 01, 02 내용 쉬워서 같이함/////////////////////////////////////////////		

		
		
		
		
//////////////////////////////////////////여기부터가 method 03/////////////////////////////////////////////		
		
//		문제 1. 메소드 연습
			/*
			 * 국어, 영어, 수학 점수를 입력 받아서
			 * 총점, 평균, 학점을 출력하는 프로그램
			 * 
			 * 총점, 평균, 학점을 구하는 각각의 메소드들을 작성하여 프로그램 완성하기
			 * 
			 *  [입력예]
			 *  78 98 57
			 *  
			 *  [출력예]
			 *  총점: 233
			 *  평균: 77.66666666666667
			 *  학점: C
			 */
			
			
			// calcTotal
			// 기능: 국어, 영어, 수학 점수를 입력 받아서 총점을 리턴하는 메소드
			// return: int
			// method name: calcTotal
			// arguments:
			//   1) int kor: 국어 점수
			//   2) int eng: 영어 점수
			//   3) int math: 수학 점수
			// TODO
			
			// calcAvg
			// 기능: 총점을 입력받아서 평균을 리턴하는 메소드
			// return: double
			// method name: calcAvg
			// arguments: int total - 총점
			// TODO
			
			// calcGrade
			// 기능: 평균을 받아서 등급을 리턴하는 메소드
			//      평균 90 이상이면 'A', 80 이상이면 'B', 70 이상이면 'C', 60 이상이면 'D'
			//      나머지는 'F' 리턴
			// return: char
			// method name: calcGrade
			// arguments: double avg - 평균
			// TODO
		
		
		
		
		
		
		
		
		
		
//////////////////////////////////////////여기까지가 method 03/////////////////////////////////////////////		
		
		
		
		
		
		
		
		
//////////////////////////////////////////여기부터가 method 06(04는 할거 없고 05는 06에 포함)/////////////////////////////////////////////	
		
//		문제 1. 오버로딩의 의미는?

//		TODO
		
		
		
		
		
		
		
//		문제 1. 오버로딩과 오버라이딩의 차이?

//		TODO
		
		
		
		
		
		
		
//		문제 1. 매개변수 리스트란 무엇을 의미하는가? 그리고 매개변수 리스트가 다른면 무엇이 가능한가?

//		TODO
		
		
		
		
		
		
		
		
//		문제 1. 
//		public static void ex(int num, String st); 와
//		public static void ex(String st, int num); 의 출력값은 같은가?

//		TODO
		
		
		
		
		
		
		
		
//		문제 1. 
//		public static void ex(int num, String st); 
//		public static void ex(String st, int num); 둘은 오버로딩이 가능한가???

//		TODO
		
		
		
		
		
		
		
		
//		문제 1. 오버로딩과 오버라이딩의 차이?
//		public static void ex(int num, String st); 
//		public static int ex(String st, int num); 둘은 오버로딩이 가능한가???

//		TODO
		
		
		
		
		
		
		
//		문제 1. 오버로딩의 장점을 println()의 성격을 통해 설명해라

//		TODO
		
		
		
		
		
		
		
//		문제 1. 오버로딩으로 출력 시 신경써야하는 부분은 무엇인가?(힌트는 영어에서 수의 일치와 비슷)

//		TODO
		
		
		
		
		
		
//		문제 1. 실제 "sayNum" 이라는 메소드를 만들고  print처럼 모든 타입을 받을 수 있게 만들어라.(맨트는 알아서 생각해네)
//		(굉장히 디테일하게 뽑아줘야된다. 각타입 다 써서 만들어)

//		TODO
		
		
		
		
		
		
		
		
		
		
//////////////////////////////////////////여기까지가 method 06/////////////////////////////////////////////		
		
		
		
		
		
		
//////////////////////////////////////////여기부터가 method 07/////////////////////////////////////////////		
		
		
//		문제 1. Math 클래스의 메소드 종류를 나열하라.(5가지)

//		TODO
		
		
		
		
		
		
//		문제 1. Math 클래스의 메소드 종류별로 양수값과 음수값에 따라서 출력해봐라.

//		TODO
		
		
		
		
		
		
		
		
//		문제 1. Math.random과 Random객체의 차이점에 대해 설명하라.

//		TODO
		
		
		
		
		
		
		
		
//		문제 1. Math.random과 Random 객체를 사용하여 0부터 3사이의 정수를 5번 출력하는 알고리즘을 각각 짜봐라.

//		TODO
		
		
		
		
		
		
		
		
		
//////////////////////////////////////////여기까지가 method 07/////////////////////////////////////////////		
		
		
		
		
		
//////////////////////////////////////////여기부터가 method 08/////////////////////////////////////////////		
/* 메소드 연습 : 컴퓨터 생각 맞추기 게임 
* 1. 메뉴를 보여주고
* 2. 사용자로부터의 입력을 받고
* 3. 컴퓨터의 생각(난수)와 비교 판정 내기
* 4. 사용자가 메뉴에서 '종료' 누르면 종료 시키기

[입력 예]		 
3

[출력 예]		 
<정상작동 시>
	 
컴퓨터 생각 맞추기 게임
----------------------
com의 생각을 맞춰보세요
1]
2]
3]
0] 종료
----------------------
선택 : 3
맞췄습니다.
----------------------
com의 생각을 맞춰보세요
1]
2]
3]
0] 종료
----------------------
선택 : 
		
		
		
<오작동시>		
컴퓨터 생각 맞추기 게임
----------------------
com의 생각을 맞춰보세요
1]
2]
3]
0] 종료
----------------------
선택 : 5
▼ 아래에 다시 입력하세요 ▼


// 아래에 숫자를 다시 입력하면 정상작동 처럼 나와야된다.(즉, 절대 안끝남 아래에 다시 입력하세요가 계속 떠야됌)
		
*/
		

		System.out.println("Rock! Scissor! Paper!");

//		TODO
		
		
		
		
		
		
		
		
		
		
		
//////////////////////////////////////////여기까지가 method 08/////////////////////////////////////////////		
		
		
		
		
		
//////////////////////////////////////////여기부터가 method 09/////////////////////////////////////////////		
		
//		문제 1. "Call By Value : 값에 의한 호출"  과     " Call By Reference : 참조에 의한 호출" 의 차이점에 대해 서술하라. 
//		특별히 이건 두개에 해당하는 메소드 출력문을 만들고나서  그림판으로 그리면서 설명 ㄱㄱ
//		설마~ 뭔뜻인지 모르면 바로 09가라 어차피 어려운 개념
		
//		TODO
		
		
		
		
		
		
		
		
		
		
//////////////////////////////////////////여기까지가 method 09/////////////////////////////////////////////		
		
		
		
		
		
		
//////////////////////////////////////////여기부터가 method A/////////////////////////////////////////////		
		
		
//////////////////////////////////////////여기까지가 method A/////////////////////////////////////////////	
		
		
		
		
		
		
//////////////////////////////////////////여기부터가 method B/////////////////////////////////////////////		
		
		
//////////////////////////////////////////여기까지가 method B/////////////////////////////////////////////	
		
		
		
		
		
		
//////////////////////////////////////////여기부터가 method C/////////////////////////////////////////////		
		
		
//////////////////////////////////////////여기까지가 method C/////////////////////////////////////////////	
		
		
		
		
		
		
//////////////////////////////////////////여기부터가 method random/////////////////////////////////////////////		
		
		
//////////////////////////////////////////여기까지가 method random/////////////////////////////////////////////	
		
		
		
		
//////////////////////////////////////////여기부터가 method rockscissorpaper/////////////////////////////////////////////		
		
		
//////////////////////////////////////////여기까지가 methodrockscissorpaper/////////////////////////////////////////////	
		
		
		
		
		
	} // end main

	
} // end class
