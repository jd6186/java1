package com.lec.java.review;

import java.util.Scanner;

// 11월 18일자 수업 복습내용

public class Review_Main {
	public static void main(String[] args) {

		
		// 문제 1. 표준입력 객체를 사용하기 위해 사용하는 예약어는?
		// TODO 
		
		
		// 문제 2. 표준입력 객체를 불러올 때 사용하는 메뉴얼 코드를 입력하라.(1줄)
		// TODO
		
		
		
		// 문제 3. 메뉴얼 코드를 입력하고 나서 해당 객체를 불러오기 위해 어떤 예약어를 어디에 사용해야되고 그것을 사용하는 단축키는 무엇인가?
		// TODO  틀린문제!!!
		
		
		
		// 문제 4. "정수 하나를 입력받아 int값으로 리턴해 사용하겠습니다." 라는 뜻의 키보드 입력처리를 작성하라.
		// TODO
		

		
		
		// 문제 5. nextInt()에는 문자열을 입력해버리면 InputMismatchException라고 예외값이 당연히 발생한다. 그 이유는 무엇인가?
		// TODO
		// 
		
		
		
		/* 문제 6. next다음에 올수 있는 모든 구문을 나열하고 각 기능을 설명하라. (8가지 + 안되는 1가지)
		// TODO
		           1)
		           2)
		           3)
		           4)
		           5)
		           6)
		           7)
		           8)
		           9).
		*/
		
		// 문제 7. 프린트가 된 다음 글을 치고, 바로 내가 미리작성해둔 글이 나오게 만들어라.(즉, 공백을 제거해줘라) 그리고 이 작업을 해야되는 이유를 CPU와 사람의 작업속도를 토대로 설명해라.
		// 참고로 next()와 같은 것들만 해당되는건 알지? line은 의미 없다.
				
				
				
		// 문제 8. 최종적으로 main에 숫자 30과 50을 더하는 표준입력 알고리즘을 작성하고 출력해라. (마지막에 닫는구문까지)
		// TODO
				
				
				
		
		/////////////////////////////여기까지가 input01///////////////////////////////////
		
		
		/* 문제 9. 다음과 같이 출력될 수 있게 하는 표준입력 클래스를 만들어라
		문자열(String), 문자(char) 입력
		이름을 입력하세요 : 정동욱
		이름은 = 정동욱
		별명을 입력하세요 : 
		300억 자산가
		성별을 입력하세요 M/W: 
		M
		내 이름은 정동욱
		내 별명은 300억 자산가
		내 성별은 : M >>>>> 이건 char형태로 출력
		프로그램 종료
		*/
		// TODO   >>> 틀린문제 마지막 char파트에서 틀림

		
		
		
		
		// 문제 10번. 문제 9번에서 사용한 2가지 next활용에 대해 설명하고 char에서 0이 아닌 다른 것을 사용할 경우 어떻게 되는지 설명하라.
		// TODO
		
		
		
		
		// 문제 11번. nextLine()과   next()의 차이는에 대해 설명하라
		// 설명시 각각을 출력하여 결과값이 어떻게 나오는지 작성하라. 그리고 next류들은 타입변경이 모두 가능한데 각각 정수, 실수, 캐릭터형태로 한번에 출력되게 만들어라.
		// TODO
		
		
		
		
		// 문제 12번. 입력된 문자열을 숫자열로 변환하라 (그리고 왜 2번작성해야 되는지 설명하라.)
		// TODO
		
		
		
		
		
		/* 문제 13. 타입 변환이 가능한 것들의 종류
		// TODO
		           1) 
		           2) 
		           3) 
		           4) 
		           5) 
		           6) 
		           7) 
		           8) 
		
		
		/* 문제 13.
		// TODO
		 * 연산자 관련 일반사항
		 * 
		 * 연산 : 
		 * 연산자  : 
		 * 피연산자 : 
		 * 
		 * ■ 피연산자의 개수에 따라
		 * ________(binary 연산자) : 
		 * ________(unary 연산자) :  
		 * ________(ternary 연산자) : 
		 * 
		 * ■ 연산자는 연산을 수행하기 전에 ______을 일치시키려 한다.
		 * 
		 * ■ 피연산자의 타입에 따라 ________이 달라지는 연산자들도 있다
		 * 
		 * ■ 모든 연산은 ________을 리턴한다 (어떠한 ______인지?, 어떤 ______인지? 주목)
		 * 
		 * ■ 관례적으로 ________는 ______와 ______ 간에 띄어쓰기를 넣는게 좋다
		 *   _______는 ______와 ______를 붙여주는게 일반.
		 */

		/* 문제 14.
		// TODO
			대입 연산자(assignment) :    " ______ " <<< (형태)
		 	뜻 : ____의 값을 ______에 대입(저장)
		 		
		 	산술 연산자 arithmetic operator : ______, ______, ______, ______, ______ 
		 */
		
		
		// 문제 15. TODO리스트의 뜻?
		// TODO
		
		
		// 문제 16. 나머지를 나타내는 연산자는 ?? 그리고 그 연산자를 변수 2개를 정해 정수와 실수 각각 도출되게 프린트 하여라.
		// TODO
		
		
		
		// 문제 17. parse타입(); 은 모든 타입이 가능(O, X)
		// TODO
	
		
	}
}
